[tool.poetry]
name = "data-science-examples"
version = "0.1.0"
description = ""
authors = ["baw <baw@hogwild.dev>"]
readme = "README.md"
packages = [
  {include = "app/internal"},
  {include = "hugging_face_course/*.py"},
  {include = "building_ml_powered_apps"},
]

[tool.poetry.scripts]
serve = "app.internal.__main__:serve"

[tool.poetry.dependencies]
python = "^3.11"
torch = "^1.13.1"
numpy = "^1.24.2"
spacy = "^3.5.0"
scikit-learn = "^1.2.1"
nltk = "^3.8.1"
textblob = "^0.17.1"
spacy-transformers = "^1.2.2"
transformers = "^4.26.1"
sentencepiece = "^0.1.97"
datasets = "^2.9.0"
evaluate = "^0.4.0"
tqdm = "^4.64.1"
accelerate = "^0.16.0"
zstandard = "^0.20.0"
python-dotenv = "^0.21.1"
faiss-cpu = "^1.7.3"
seqeval = "^1.2.2"
sacrebleu = "^2.3.1"
rouge-score = "^0.1.2"
protobuf = "^4.22.0"
gradio = "^3.20.0"
polars = "^0.16.11"
numpy-financial = "^1.0.0"
openpyxl = "^3.1.1"
statsmodels = "^0.13.5"
yfinance = "^0.2.12"
tables = "^3.8.0"
pyphen = "^0.13.2"
lime = "^0.2.0.1"
flask = "^2.2.3"
seaborn = "^0.12.2"
xlsx2csv = "^0.8.1"
geoip2 = "^4.6.0"
scapy = "^2.5.0"


[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
isort = "^5.11.4"
python-lsp-server = {extras = ["all"], version = "^1.7.1"}
pytest = "^7.2.2"
pytest-cov = "^4.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
include = '\.pyi?$'
exclude = '''
/(
		\.eggs
	|	\.git
	|	\.hg
	|	\.mypy_cache
	|	\.tox
	|	\.venv
	| _build
	| build
	| dist
)/
'''

[tool.isort]
profile = "black"
src_paths = ["app"]
multi_line_output = 3
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# TODO: These need to be added to my base configuration...
# Also here is a good configuration for attempting to use `ruff` instead of `flake8`:
# https://github.com/se2p/pynguin/blob/main/pyproject.toml
#
# For instance pylint uses it LOL
# https://github.com/PyCQA/pylint/blob/47cb11f4cb01a61f83d915d88e828f103a479980/pyproject.toml
#
# Here is the good stuff:
# https://github.com/charliermarsh/ruff
[tool.coverage.run]
omit = [
  "*/tests/*"
]
branch = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:"
]

[tool.coverage.html]
directory = "cov_html"
